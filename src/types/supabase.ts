/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/profiles": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          updated_at?: parameters["rowFilter.profiles.updated_at"];
          username?: parameters["rowFilter.profiles.username"];
          avatar_url?: parameters["rowFilter.profiles.avatar_url"];
          website?: parameters["rowFilter.profiles.website"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["profiles"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** profiles */
          profiles?: definitions["profiles"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          updated_at?: parameters["rowFilter.profiles.updated_at"];
          username?: parameters["rowFilter.profiles.username"];
          avatar_url?: parameters["rowFilter.profiles.avatar_url"];
          website?: parameters["rowFilter.profiles.website"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          updated_at?: parameters["rowFilter.profiles.updated_at"];
          username?: parameters["rowFilter.profiles.username"];
          avatar_url?: parameters["rowFilter.profiles.avatar_url"];
          website?: parameters["rowFilter.profiles.website"];
        };
        body: {
          /** profiles */
          profiles?: definitions["profiles"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/orders": {
    get: {
      parameters: {
        query: {
          inserted_at?: parameters["rowFilter.orders.inserted_at"];
          updated_at?: parameters["rowFilter.orders.updated_at"];
          data?: parameters["rowFilter.orders.data"];
          name?: parameters["rowFilter.orders.name"];
          id?: parameters["rowFilter.orders.id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["orders"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** orders */
          orders?: definitions["orders"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          inserted_at?: parameters["rowFilter.orders.inserted_at"];
          updated_at?: parameters["rowFilter.orders.updated_at"];
          data?: parameters["rowFilter.orders.data"];
          name?: parameters["rowFilter.orders.name"];
          id?: parameters["rowFilter.orders.id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          inserted_at?: parameters["rowFilter.orders.inserted_at"];
          updated_at?: parameters["rowFilter.orders.updated_at"];
          data?: parameters["rowFilter.orders.data"];
          name?: parameters["rowFilter.orders.name"];
          id?: parameters["rowFilter.orders.id"];
        };
        body: {
          /** orders */
          orders?: definitions["orders"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/companies": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.companies.id"];
          created_at?: parameters["rowFilter.companies.created_at"];
          name?: parameters["rowFilter.companies.name"];
          size?: parameters["rowFilter.companies.size"];
          sector?: parameters["rowFilter.companies.sector"];
          logo?: parameters["rowFilter.companies.logo"];
          website?: parameters["rowFilter.companies.website"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["companies"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** companies */
          companies?: definitions["companies"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.companies.id"];
          created_at?: parameters["rowFilter.companies.created_at"];
          name?: parameters["rowFilter.companies.name"];
          size?: parameters["rowFilter.companies.size"];
          sector?: parameters["rowFilter.companies.sector"];
          logo?: parameters["rowFilter.companies.logo"];
          website?: parameters["rowFilter.companies.website"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.companies.id"];
          created_at?: parameters["rowFilter.companies.created_at"];
          name?: parameters["rowFilter.companies.name"];
          size?: parameters["rowFilter.companies.size"];
          sector?: parameters["rowFilter.companies.sector"];
          logo?: parameters["rowFilter.companies.logo"];
          website?: parameters["rowFilter.companies.website"];
        };
        body: {
          /** companies */
          companies?: definitions["companies"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/customers": {
    get: {
      parameters: {
        query: {
          inserted_at?: parameters["rowFilter.customers.inserted_at"];
          updated_at?: parameters["rowFilter.customers.updated_at"];
          data?: parameters["rowFilter.customers.data"];
          name?: parameters["rowFilter.customers.name"];
          id?: parameters["rowFilter.customers.id"];
          /** 公司地址 */
          address?: parameters["rowFilter.customers.address"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["customers"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** customers */
          customers?: definitions["customers"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          inserted_at?: parameters["rowFilter.customers.inserted_at"];
          updated_at?: parameters["rowFilter.customers.updated_at"];
          data?: parameters["rowFilter.customers.data"];
          name?: parameters["rowFilter.customers.name"];
          id?: parameters["rowFilter.customers.id"];
          /** 公司地址 */
          address?: parameters["rowFilter.customers.address"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          inserted_at?: parameters["rowFilter.customers.inserted_at"];
          updated_at?: parameters["rowFilter.customers.updated_at"];
          data?: parameters["rowFilter.customers.data"];
          name?: parameters["rowFilter.customers.name"];
          id?: parameters["rowFilter.customers.id"];
          /** 公司地址 */
          address?: parameters["rowFilter.customers.address"];
        };
        body: {
          /** customers */
          customers?: definitions["customers"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/materials": {
    get: {
      parameters: {
        query: {
          inserted_at?: parameters["rowFilter.materials.inserted_at"];
          updated_at?: parameters["rowFilter.materials.updated_at"];
          data?: parameters["rowFilter.materials.data"];
          name?: parameters["rowFilter.materials.name"];
          id?: parameters["rowFilter.materials.id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["materials"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** materials */
          materials?: definitions["materials"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          inserted_at?: parameters["rowFilter.materials.inserted_at"];
          updated_at?: parameters["rowFilter.materials.updated_at"];
          data?: parameters["rowFilter.materials.data"];
          name?: parameters["rowFilter.materials.name"];
          id?: parameters["rowFilter.materials.id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          inserted_at?: parameters["rowFilter.materials.inserted_at"];
          updated_at?: parameters["rowFilter.materials.updated_at"];
          data?: parameters["rowFilter.materials.data"];
          name?: parameters["rowFilter.materials.name"];
          id?: parameters["rowFilter.materials.id"];
        };
        body: {
          /** materials */
          materials?: definitions["materials"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/contacts": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.contacts.id"];
          created_at?: parameters["rowFilter.contacts.created_at"];
          name?: parameters["rowFilter.contacts.name"];
          phone?: parameters["rowFilter.contacts.phone"];
          company_id?: parameters["rowFilter.contacts.company_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["contacts"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** contacts */
          contacts?: definitions["contacts"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.contacts.id"];
          created_at?: parameters["rowFilter.contacts.created_at"];
          name?: parameters["rowFilter.contacts.name"];
          phone?: parameters["rowFilter.contacts.phone"];
          company_id?: parameters["rowFilter.contacts.company_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.contacts.id"];
          created_at?: parameters["rowFilter.contacts.created_at"];
          name?: parameters["rowFilter.contacts.name"];
          phone?: parameters["rowFilter.contacts.phone"];
          company_id?: parameters["rowFilter.contacts.company_id"];
        };
        body: {
          /** contacts */
          contacts?: definitions["contacts"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  profiles: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /** Format: timestamp with time zone */
    updated_at?: string;
    /** Format: text */
    username?: string;
    /** Format: text */
    avatar_url?: string;
    /** Format: text */
    website?: string;
  };
  orders: {
    /**
     * Format: timestamp with time zone
     * @default timezone('utc'::text, now())
     */
    inserted_at: string;
    /**
     * Format: timestamp with time zone
     * @default timezone('utc'::text, now())
     */
    updated_at: string;
    /** Format: jsonb */
    data?: unknown;
    /** Format: text */
    name?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
  };
  /** @description 公司表 */
  companies: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: text */
    name?: string;
    /** Format: smallint */
    size?: number;
    /** Format: text */
    sector?: string;
    /** Format: text */
    logo?: string;
    /** Format: text */
    website?: string;
  };
  customers: {
    /**
     * Format: timestamp with time zone
     * @default timezone('utc'::text, now())
     */
    inserted_at: string;
    /**
     * Format: timestamp with time zone
     * @default timezone('utc'::text, now())
     */
    updated_at: string;
    /** Format: jsonb */
    data?: unknown;
    /** Format: text */
    name?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: text
     * @description 公司地址
     */
    address?: string;
  };
  materials: {
    /**
     * Format: timestamp with time zone
     * @default timezone('utc'::text, now())
     */
    inserted_at: string;
    /**
     * Format: timestamp with time zone
     * @default timezone('utc'::text, now())
     */
    updated_at: string;
    /** Format: jsonb */
    data?: unknown;
    /** Format: text */
    name?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
  };
  /** @description 联系人管理 */
  contacts: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: text */
    name?: string;
    /** Format: text */
    phone?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `companies.id`.<fk table='companies' column='id'/>
     */
    company_id?: number;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description profiles */
  "body.profiles": definitions["profiles"];
  /** Format: uuid */
  "rowFilter.profiles.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.profiles.updated_at": string;
  /** Format: text */
  "rowFilter.profiles.username": string;
  /** Format: text */
  "rowFilter.profiles.avatar_url": string;
  /** Format: text */
  "rowFilter.profiles.website": string;
  /** @description orders */
  "body.orders": definitions["orders"];
  /** Format: timestamp with time zone */
  "rowFilter.orders.inserted_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.orders.updated_at": string;
  /** Format: jsonb */
  "rowFilter.orders.data": string;
  /** Format: text */
  "rowFilter.orders.name": string;
  /** Format: uuid */
  "rowFilter.orders.id": string;
  /** @description companies */
  "body.companies": definitions["companies"];
  /** Format: bigint */
  "rowFilter.companies.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.companies.created_at": string;
  /** Format: text */
  "rowFilter.companies.name": string;
  /** Format: smallint */
  "rowFilter.companies.size": string;
  /** Format: text */
  "rowFilter.companies.sector": string;
  /** Format: text */
  "rowFilter.companies.logo": string;
  /** Format: text */
  "rowFilter.companies.website": string;
  /** @description customers */
  "body.customers": definitions["customers"];
  /** Format: timestamp with time zone */
  "rowFilter.customers.inserted_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.customers.updated_at": string;
  /** Format: jsonb */
  "rowFilter.customers.data": string;
  /** Format: text */
  "rowFilter.customers.name": string;
  /** Format: uuid */
  "rowFilter.customers.id": string;
  /**
   * Format: text
   * @description 公司地址
   */
  "rowFilter.customers.address": string;
  /** @description materials */
  "body.materials": definitions["materials"];
  /** Format: timestamp with time zone */
  "rowFilter.materials.inserted_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.materials.updated_at": string;
  /** Format: jsonb */
  "rowFilter.materials.data": string;
  /** Format: text */
  "rowFilter.materials.name": string;
  /** Format: uuid */
  "rowFilter.materials.id": string;
  /** @description contacts */
  "body.contacts": definitions["contacts"];
  /** Format: bigint */
  "rowFilter.contacts.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.contacts.created_at": string;
  /** Format: text */
  "rowFilter.contacts.name": string;
  /** Format: text */
  "rowFilter.contacts.phone": string;
  /** Format: bigint */
  "rowFilter.contacts.company_id": string;
}

export interface operations {}

export interface external {}
